

@using System.Data
@inherits ViewDataTable_Code
<!--Put code outside of razor file (see "ViewDataTable.razor.cs")-->

<PopUp PopupMessageHeader=@MessageHeader PopupMessage=@Message />

<h2>
    @if (currentpage > 1)
    {
        <button class="btn btn-primary" @onclick="PreviousPage">@PreviousPage_Name</button>
    }
    else
    {
        <button class="btn btn-primary" disabled>@PreviousPage_Name</button>
    }
    @if (currentpage < pages)
    {
        <button class="btn btn-primary" @onclick="NextPage">@NextPage_Name</button>
    }
    else
    {
        <button class="btn btn-primary" disabled>@NextPage_Name</button>
    }
    <EditForm Model="@settings" OnValidSubmit="@HandleValidSubmit">
        <h5>
            max rows per page:
            <InputNumber @bind-Value="settings.maxRowsToDisplay" />
        </h5>
    </EditForm>
</h2>

<table class="table">
    <thead>
        <tr>
            @foreach (System.Data.DataColumn column in table.Columns)
            {
                <th>
                <input @bind=@column.ColumnName/>
                <button class="btn btn-primary" @onclick="(() => Sort(column.ColumnName.ToString()))">
                    @if (lastSortedColumn == column.ColumnName && sortDesc) {<div>↓</div>}
                    else if (lastSortedColumn == column.ColumnName) {<div>↑</div>}
                    else {<div>↕</div>}
                </button>
                </th>

            }
        </tr>
    </thead>
    <tbody>
        @for (int i = settings.maxRowsToDisplay * (currentpage - 1); i < (settings.maxRowsToDisplay * currentpage) && i < table.Rows.Count; i++)
        {
            System.Data.DataRow row = table.Rows[i];
            pages = (table.Rows.Count / settings.maxRowsToDisplay) + 1;
            <tr>
                @foreach (System.Data.DataColumn column in table.Columns)
                {
                    <td><Input value=@row[column] @onchange="@((ChangeEventArgs args) => SetDataTableValueAsync(row,column, args))" /></td>
                    <!--There is a bug, if user enters the wrong value, will still display the wrong value-->
                    <!-- "((ChangeEventArgs args) =>  row[column] = args.Value.ToString()-->
                }
            </tr>
            @if (row == table.Rows[table.Rows.Count - 1]) break;
        }
    </tbody>
</table>

<h3>Page: @currentpage of @pages</h3>

@code{
    string value = "";
}

